/** Generated by the default template from graphql-java-generator */
package ${packageUtilName};

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.builder.SpringApplicationBuilder;
import org.springframework.boot.context.properties.EnableConfigurationProperties;
import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;
import org.springframework.context.annotation.FilterType;
import org.springframework.context.annotation.ComponentScan;

#if($configuration.generateJPAAnnotation)
import org.springframework.boot.autoconfigure.domain.EntityScan;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
#end

import com.graphql_java_generator.util.GraphqlUtils;

import graphql.spring.web.servlet.GraphQLEndpointConfiguration;
import graphql.spring.web.servlet.components.DefaultGraphQLInvocation;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@SpringBootApplication(excludeName = { "com.graphql_java_generator.spring.client.GraphQLAutoConfiguration",
		"graphql.spring.web.servlet.GraphQLEndpointConfiguration" })
@ComponentScan(basePackages = { "${configuration.packageName}", "com.graphql_java_generator.server",
		"com.graphql_java_generator.util", "graphql.spring.web.servlet.components" ${configuration.quotedScanBasePackages}}, 
	excludeFilters = {
		@ComponentScan.Filter(type = FilterType.ASSIGNABLE_TYPE, value = GraphQLEndpointConfiguration.class),
		@ComponentScan.Filter(type = FilterType.ASSIGNABLE_TYPE, value = DefaultGraphQLInvocation.class) })
#if($configuration.generateJPAAnnotation)
@EnableJpaRepositories(basePackages = { "${configuration.packageName}", "com.graphql_java_generator" ${configuration.quotedScanBasePackages} })
@EntityScan(basePackages = { "${configuration.packageName}", "com.graphql_java_generator" ${configuration.quotedScanBasePackages} })
#end
@EnableConfigurationProperties
public class GraphQLServerMain#if(${configuration.packaging}=="war") extends SpringBootServletInitializer#end {

#if($packaging=="war")
	@Override
	protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {
		return application.sources(GraphQLServerMain.class);
	}
#end

	public static void main(String[] args) {
		SpringApplication.run(GraphQLServerMain.class, args);
	}

}
